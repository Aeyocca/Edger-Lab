#Duplication fate project, looking at expression patterns in duplicated genes with cleome as outgroup expression value, well looking at up / downregulation under stresses (determined by edgeR) as character states to reconstruct ancestral up/downregulation state to look for evidence of subfunctionalization. After the genes with differential response to stress have been identified, their conserved non-coding sequences (CNSs) will be examined, hopefully will be able to find enriched kmer which corresponds to stress responsive element to which TFs bind

12-28-17
Just got back from break, before break / during wrote script (sub_filter.pl) to parse a few files. Had already determined whether certain genes were up / downregulated in response to different stresses. Examined that set of files to create a file where each line lists a single cleome gene name that shows an informative expression change between cleome and two duplicated a. thaliana copies of a gene. Will use this file to extract CNSs for these genes and perform kmer enrichment.

I have comp_cold.txt created output from sub_filter.pl which has tab separated [at edgeR number] [at subgenome copy 1 exp diff value] [at subgenome copy 2 exp diff value] [cleome exp diff value]

I wrote summary_stats.pl to output the informative genes and also print to command line how many were printed, I guess I could combine this with the other script, but they are already separate, and this way incase we want to examine genes without the pattern we were looking for (ONLY 1 at copy sharing state with CV) we got the full list.

Lets fix sub_filter.pl to include a fifth and sixth column with the TAIR10 gene name and cleome ortholog gene name respectively.


$ ./sub_filter.pl -p temp.txt -i At-Index.txt -a AtAlpha_Cv_4KT.txt -t edgeR_Arabidopsis_ColdALL_05_OUT_DEG.csv -c edgeR_Cv_ColdALL_05_OUT_DEG.txt -e Cv_Control1-6_GeneID.csv -o comp_cold.txt
1400 lines were written to comp_cold.txt

33602 lines were read in the at exp file

$ ./summary_stats.pl -i comp_cold.txt -o inf_cold.txt
1400 genes were analyzed
361 genes were informative and written to inf_cold.txt

Make files for other treatments:

$ ./sub_filter.pl -p temp.txt -i At-Index.txt -a AtAlpha_Cv_4KT.txt -t edgeR_Arabidopsis_SaltALL_05_OUT_DEG.csv -c edgeR_Cv_SaltALL_05_OUT_DEG.txt -e Cv_Control1-6_GeneID.csv -o comp_salt.txt 
0 lines were written to comp_salt.txt

0 lines were read in the at exp file

oopsy, got some problems
I remember now,
************************IMPORTANT********************************
The files sent to me were written on pc, so they have DOS carriage returns. Only way I know to fix is to upload file to hpcc, because my terminal doesn't have the dos2unix command. Need to log onto dev node also,

$ ./sub_filter.pl -p temp.txt -i At-Index.txt -a AtAlpha_Cv_4KT.txt -t edgeR_Arabidopsis_SaltALL_05_OUT_DEG.csv -c edgeR_Cv_SaltALL_05_OUT_DEG.txt -e Cv_Control1-6_GeneID.csv -o comp_salt.txt
0 lines were written to comp_salt.txt

0 lines were read in the at exp file

I think there is some flag I need but I can't remember what it was, use vi instead:
:1,$s/^M/\r/g
(enter ^M by pressing ctl+v then enter)

there we go, that did it, only needed to edit the arabidopsis ones, I think the dos2unix without any flags worked on the cv ones

$ ./sub_filter.pl -p temp.txt -i At-Index.txt -a AtAlpha_Cv_4KT.txt -t edgeR_Arabidopsis_SaltALL_05_OUT_DEG.csv -c edgeR_Cv_SaltALL_05_OUT_DEG.txt -e Cv_Control1-6_GeneID.csv -o comp_salt.txt
1400 lines were written to comp_salt.txt

33602 lines were read in the at exp file


aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./summary_stats.pl -i comp_salt.txt -o inf_salt.txt
1400 genes were analyzed
317 genes were informative and written to inf_salt.txt



$ ./sub_filter.pl -p temp.txt -i At-Index.txt -a AtAlpha_Cv_4KT.txt -t edgeR_Arabidopsis_MeJaALL_05_OUT_DEG.csv -c edgeR_Cv_MeJaALL_05_OUT_DEG.txt -e Cv_Control1-6_GeneID.csv -o comp_meja.txt
1400 lines were written to comp_meja.txt

33602 lines were read in the at exp file


aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./summary_stats.pl -i comp_meja.txt -o inf_meja.txt
1400 genes were analyzed
121 genes were informative and written to inf_meja.txt


Whats the degree of overlap between these gene sets?

Next I want to look for enriched kmers in CNSs of stress responsive (both up and down reg) genes.
To do this, I need two bins for kmer enrichment: background bin with non-repsonsive gene CNSs and treatment bin with responsive CNSs.
Need: script that will look through a set of genes with exp response direction (comp_[stress].txt or inf_[stress].txt files) and output just a list of at geneIDs with 4 different files: 2 non responsive genes one paired with up / down reg. and 2 responsive genes, one up one down. Look at the conditionals in the script, will explain much better than I can with words. 
Run this script through the 3 stresses, and through both comp / inf files. should end up with 24 files (create separate directory for them)

*********NONUPs are genes with NO CHANGE in treatment, whose PARALOG is UP regulated in the treatment*************************


Then the hard part will be extracting CNSs but we can think about those later.

sub_kmer_en_input.pl
my $usage = "\n$0 -i <comparison / informative file> -a <at_[stress]_up_[comp/inf].txt> -b <at_[stress]_nonup_[comp/inf].txt> -c <at_[stress]_down_[comp/inf].txt> -d <at_[stress]_nondown_[comp/inf].txt> -w <at_duplication_file> -p <temp.txt> \n\n";

$ ./sub_kmer_en_input.pl -i comp_cold.txt -a at_cold_up_comp.txt -b at_cold_nonup_comp.txt -c at_cold_down_comp.txt -d at_cold_nondown_comp.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 69
Second copy upregulated, first non-resp: 78
First copy downregulated, second non-resp: 98
Second copy downregulated, first non-resp: 115

$ ./sub_kmer_en_input.pl -i inf_cold.txt -a kmer_en/at_cold_up_inf.txt -b kmer_en/at_cold_nonup_inf.txt -c kmer_en/at_cold_down_inf.txt -d kmer_en/at_cold_nondown_inf.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 69
Second copy upregulated, first non-resp: 77
First copy downregulated, second non-resp: 98
Second copy downregulated, first non-resp: 114

Thats pretty interesting, only 2 occurrences of at1/2 one zero, and cv opposite of non-zero value (if that makes sense: only 2 occurrences of 1 0 -1, 0 1 -1, -1 0 1, 0 -1 1) those 4 different possibilities, at random should occur 1400*(4/(3^3)) =~ 207 times

$ ./sub_kmer_en_input.pl -i comp_salt.txt -a kmer_en/at_salt_up_comp.txt -b kmer_en/at_salt_nonup_comp.txt -c kmer_en/at_salt_down_comp.txt -d kmer_en/at_salt_nondown_comp.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 73
Second copy upregulated, first non-resp: 76
First copy downregulated, second non-resp: 75
Second copy downregulated, first non-resp: 99


aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./sub_kmer_en_input.pl -i inf_salt.txt -a kmer_en/at_salt_up_inf.txt -b kmer_en/at_salt_nonup_inf.txt -c kmer_en/at_salt_down_inf.txt -d kmer_en/at_salt_nondown_inf.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 73
Second copy upregulated, first non-resp: 75
First copy downregulated, second non-resp: 73
Second copy downregulated, first non-resp: 96

$ ./sub_kmer_en_input.pl -i comp_meja.txt -a kmer_en/at_meja_up_comp.txt -b kmer_en/at_meja_nonup_comp.txt -c kmer_en/at_meja_down_comp.txt -d kmer_en/at_meja_nondown_comp.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 22
Second copy upregulated, first non-resp: 31
First copy downregulated, second non-resp: 26
Second copy downregulated, first non-resp: 41

$ ./sub_kmer_en_input.pl -i inf_meja.txt -a kmer_en/at_meja_up_inf.txt -b kmer_en/at_meja_nonup_inf.txt -c kmer_en/at_meja_down_inf.txt -d kmer_en/at_meja_nondown_inf.txt -w AtAlpha_Cv_4KT.txt -p temp.txt

A total of:
First copy upregulated, second non-resp: 22
Second copy upregulated, first non-resp: 31
First copy downregulated, second non-resp: 26
Second copy downregulated, first non-resp: 41



Now we need to go from list of gene IDs to one file with just a string of CNSs

12-29-17:

get the CNSs for the gene lists using make_kmer_files.pl

aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edge                                                                                                                R
$ ./make_kmer_files.pl -i kmer_en/at_cold_up_comp.txt -o kmer_en/cns_sorted/at_cold_up_comp_cns.fa -c CNS_Brassicaceae_65K_4Alan.txt -p tempo.txt                                               
Number of CNSs written to output: 708

aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./make_kmer_files.pl -i kmer_en/at_cold_nonup_comp.txt -o kmer_en/cns_sorted/at_cold_nonup_comp_cns.fa -c CNS_Brassicaceae_65K_4Alan.txt -p tempo.txt

Number of CNSs written to output: 492

aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./make_kmer_files.pl -i kmer_en/at_cold_down_comp.txt -o kmer_en/cns_sorted/at_cold_down_comp_cns.fa -c CNS_Brassicaceae_65K_4Alan.txt -p tempo.txt

Number of CNSs written to output: 695

aeyocca@Larry /cygdrive/c/Users/aeyocca/Documents/1_MSU/Edger_Rotation_2017/edgeR
$ ./make_kmer_files.pl -i kmer_en/at_cold_nondown_comp.txt -o kmer_en/cns_sorted/at_cold_nondown_comp_cns.fa -c CNS_Brassicaceae_65K_4Alan.txt -p tempo.txt

Number of CNSs written to output: 786


Make table:
Stress	comp/inf	direction	Number written to output
cold	  comp    	up	      708
cold	  comp	    nonup	    492
cold  	comp	    down	    695
cold	  comp	    nondown	  786
cold	  inf	      up	      707
cold	  inf	      nonup	    487
cold	  inf	      down	    673
cold	  inf	      nondown	  769
salt	  comp	    up	      714
salt	  comp	    nonup	    514
salt	  comp	    down	    614
salt	  comp	    nondown	  552
salt	  inf	      up	      713
salt	  inf	      nonup	    509
salt	  inf	      down	    604
salt	  inf     	nondown	  532
meja	  comp	    up	      207
meja	  comp    	nonup	    198
meja	  comp	    down	    247
meja	  comp	    nondown	  221
meja	  inf	      up	      207
meja	  inf	      nonup	    198
meja	  inf     	down	    247
meja	  inf	      nondown  	221


Alriighty, lets hope jellyfish will read these correctly, looks like it does, write different scripts for 5,6,7mer to iterate through all files:

[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_5.sh
50809721[].mgr-04.i
50809916[].mgr-04.i

[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_6.sh
50809948[].mgr-04.i
[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_7.sh
50809949[].mgr-04.i

[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_6.sh
50810478[].mgr-04.i
[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_7.sh
50810479[].mgr-04.i


[yoccaala@dev-intel14 cns_sorted]$ qsub jellyfish_all_7.sh
50810495.mgr-04.i


make scatterplot data frames: make_scat_df.pl

[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-18 -v INFILE=up_dump_files.txt make_scat_df_up.sh  50811560[].mgr-04.i
[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-18 -v INFILE=down_dump_files.txt make_scat_df_down.sh
50811563[].mgr-04.i


1-2-18
the scat_dfs looked messed up for some since the jellyfish qsub files weren't exactly correct. Fixed those and restarted from jellyfish step:

[yoccaala@dev-intel14 cns_sorted]$ wc -l cns_files.txt
24 cns_files.txt
[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_5.sh
50937959[].mgr-04.i
[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_6.sh
50937970[].mgr-04.i
[yoccaala@dev-intel14 cns_sorted]$ qsub -t 1-24 -v INFILE=cns_files.txt jellyfish_7.sh
50937982[].mgr-04.i


[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-18 -v INFILE=up_dump_files.txt make_scat_df_up.sh
50938481[].mgr-04.i
[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-18 -v INFILE=down_dump_files.txt make_scat_df_down.sh
50938483[].mgr-04.i


make a script to make scatterplot dataframes comparing the percentage frequency of kmer in stress vs. overall kmer frequency. So need to run jellyfish on base cns file

jellyfish count -m 5 -s 100M -t 1 -o jellyfish/${NAME}binary_5.jf ${LINE}

jellyfish dump jellyfish/${NAME}binary_5.jf_0 > jellyfish/${NAME}dump_5.fa
my $usage = "\n$0 -i <jellyfish_dump.fa> -z <zero_exp_change_jellyfish_dump.fa> -o <at_[stress]_[up/down]_[comp/inf]_df.txt> -p <temp1.txt> -q <temp2.txt> \n\n";

[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-12 -v INFILE=all_7_dump_files.txt make_scat_df_all_7.sh
50940545[].mgr-04.i
[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-12 -v INFILE=all_6_dump_files.txt make_scat_df_all_6.sh
50940546[].mgr-04.i
[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-12 -v INFILE=all_5_dump_files.txt make_scat_df_all_5.sh
50940548[].mgr-04.i

checked out all the scatter plots, not too much interesting. getting some signal from meja files, could be that they are messed up though... we shall see

at_salt_down_inf_dump_5.fa
at_meja_up_comp_dump_5.fa

at_meja_down_comp_dump_7_df.txt
TAAAGTA 7       0
AAACATT 7       1
AGACAAA 7       1


[yoccaala@dev-intel14 Permutations]$ qsub -t 1-1000 -v INFILE=perm_file_list.txt jellyfish_5.sh
50950625[].mgr-04.i


module load jellyfish

LINE=`/bin/sed -n ${PBS_ARRAYID}p ${INFILE}`

NAME=$(echo ${LINE} | sed 's/\.txt//')

jellyfish count -m 5 -s 100M -t 1 -o jellyfish/${NAME}binary_5.jf ${LINE}

jellyfish dump jellyfish/${NAME}binary_5.jf_0 > jellyfish/${NAME}.fa


[yoccaala@dev-intel14 Permutations]$ qsub -t 1-1000 -v INFILE=perm_file_list.txt jellyfish_5.sh
50950867[].mgr-04.i


[yoccaala@dev-intel14 kmer_en]$ qsub perm_kmer_con.sh
50961520.mgr-04.i
50964048.mgr-04.i
50964820.mgr-04.i
50965016.mgr-04.i
50965414.mgr-04.i
50965580.mgr-04.i
50966987.mgr-04.i

1-3-18

50981248.mgr-04.i
50981332.mgr-04.i
50981371.mgr-04.i
50981422.mgr-04.i
50981451.mgr-04.i
50981914.mgr-04.i
50982021.mgr-04.i
50982866.mgr-04.i
50983684.mgr-04.i
50983957.mgr-04.i

[yoccaala@dev-intel14 kmer_en]$ qsub perm_kmer_con_1.sh
50986540.mgr-04.i
50987822.mgr-04.i
50987926.mgr-04.i

1-7-18

[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-1000 -v INFILE=fa_file_list.txt fa_to_one_liner.sh
51058722[].mgr-04.i
51059305[].mgr-04.i
51065779[].mgr-04.i

convert all to one liner, load into r to compile into one file, convert all the treatments to one line, use one line treatments and combined file in R to get file for each treatment with kmer tab count tab significance. BEFORE THAT********** edit the significance calculation to include percentage rather than raw count (convert all raw counts to percentages, add that as another column in the significance output)

This one is for the treatment files:
[yoccaala@dev-intel14 jellyfish]$ qsub -t 1-72 -v INFILE=fa_file_list.txt fa_to_one_liner.sh
51058897[].mgr-04.i
51059008[].mgr-04.i
51059585[].mgr-04.i
51065522[].mgr-04.i



Going to do an all v all blast search of enriched kmer files against database of known motifs and see what happens
>Athb-1 is listed twice, once with a sequence, and once without, so just removed the empty one in the hpcc copy, otherwise, fails to build db


$ module load BLAST/2.2.26
[yoccaala@dev-intel14 blast_run]$ dos2unix MotifsPlantPanCH2_Database.txt
dos2unix: converting file MotifsPlantPanCH2_Database.txt to UNIX format ...
[yoccaala@dev-intel14 blast_run]$ formatdb -i MotifsPlantPanCH2_Database.txt -p F -o T -n Motifs_db

EXAMPLE FROM qsub_blastall_ZMB73_TIGR.sh:
cd /mnt/home/yoccaala/01_VanBuren/mcscan/MCScanX/data
module load BLAST
blastall -p blastp -d "ZmB73_db Osativa_db_TIGR Bdistachyon_192_db Sbicolor_79_db" -i ZmB73_peptide.fa -e 1e-5 -b 5 -v 5 -m 8 -o ZmB73.blast3

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-24 -v INFILE=file_list.txt sig_to_fa.sh
51078670[].mgr-04.i
51078723[].mgr-04.i
51078741[].mgr-04.i
51080427[].mgr-04.i
51086324[].mgr-04.i

$ blastall -p blastn -d "MotifsPlantPanCH2_Database.txt" -i treat_sig_fa/at_cold_down_inf_dump_5_sig.fa -e 1e-5 -b 5 -v 5 -m 8 -o blast_output/at_cold_down_inf_dump_5.blast

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-24 -v INFILE=sig_file_list.txt blast_sig_treat_to_motif.sh
51082262[].mgr-04.i

since query is so short (5 nt since doing 5mers at the moment), need to add -W flag which sets word length. not entirely sure what that means but the default is 11 and since our query is 5, its finding zero hits, found some post recommending setting this to half the query length, but the minimum is 4, so we are sticking with that

lowest E value obtained seems to be 5.1, probably lowest posible with 5 nt query. Lets start creating the 7mer permutation files then while trying to parse through this blast output

[yoccaala@dev-intel14 Permutations]$ qsub -t 1-1000 -v INFILE=perm_file_list.txt jellyfish_7.sh
51086556[].mgr-04.i
aa

1-11-18

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-24 -v INFILE=file_lists/cut_file_list.txt cut_sig.sh
51161149[].mgr-04.i
51161339[].mgr-04.i

make histogram of significance values. whats best way to remove NAs? grep not matching, yea

- make sub genome exp into table
- Think about tracking CNS changes, whats informative?
- What does this putative function list tell me?
	- What sort of comparisons should I be making across all 8 files within stress / over/underrepresentation. 
	-What are the expected functions of kmers overrep in non-responsive genes (since there are so few compared to the changed exp ones **********MAKE A TABLE********* perhaps they are just showing up there because they do show a change, but edgeR filters are too stringent, interesting to directly compare FPKM of genes in that category, might be too cyclical as far as tracking those genes down, might just be easier to lower constraints and rerun edgeR, that would be good because I would learn how to use it too, look that up later

PUTATIVE FUNCTION, COULD B DIFF FUNCS SHARE 7 BP CONSENSUS BC GOOD FOR TF BINDING


reading the Shui paper again, Those that don't respond anymore have lost the cis elements, genes that lost response to one stress, gained response to another. Rates of expression response changes decrease over evolutionary time. The proportion of nonfunctionalization of copies increases over evolutionary time. 

- Larger effective population size may result in greater duplicate exp divergence

- presence of broad spectrum cis elements over rep in pairs showing Asy=1 (one ancestral, other loss) compared to pairs showing symmetric response, thats interesting, you would think the broad responsive elements would maintain symmetry, they argue the differential loss of these broad responsive elements may be responsible for asymmetric response
- sub-neofunctionalization, neofunct usually occurs on duplicate that did not inherit the ancestral response, but duh kind of right? has to lose original function most likely first, if accumulating mutations randomly, going to do bad before you do good? IT CANT BE A RANDOM PROCESS, I ALMOST REFUSE TO BELIEVE IT, MAYBE I NEED TO RETHINK THE NUMBERS BUT NO WAY RANDOM MUTATIONS RESPONSIBLE FOR EVERYTHING WE SEE TODAY, MAYBE THE NUMBERS ARE SMALLER THAN I THINK BUT DAMN, CANT BE COMPLETELY RANDOM. Big innovations have to be non-random, right?


*****THINK OF how to find out if those that lost response to one stress, gained response to another************
- What other informative comparisons could I make? Only compared the up regulated to nonup, and down regulated to nondown
- find a way to quickly access the gene lists, ie, list of genes that are upregulated / downregulated... Actually should have that file somewhere, right? If not should be straight forward to pull from edgeR output
- look at genes with most interesting motif hits, see if their exp difference is >> than those with seemingly background ubiquitous motifs

1-19-18:

- create list of kmers that are over represented that do not have a blast hit:
	- grep for "Query: 1" will give the 7mer alignment, cut field 3 based on space delimiter, need to uniq within that file
	- put into file that has blast_7mer
	- check if there is a unix way to get unique between that and the significance file, if not write perl script
	
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51419109[].mgr-04.i

	- this should put _blast_7mer.txt files into blast_run/sig_7/kmer_blast_hit/ directory containing files that have "Query: 1 kmer" for all kmer hits in blast
	- upon first look at at_cold_down_comp seem have 80 significant over rep kmers getting a blast hit to the motif db out of 890 total significantly over rep kmers. Perhaps I should rerun blast allowing up to two mismatches, that will be interesting to see what our list of "novel" kmers goes down to. 
	- side note, there are about 16k possible kmers and we get 890 ( ~5%) significant, while that seems random, we get ~5% total kmers significant but a much higher % of the kmers present only in that treatment. Still something thats going to bother me. Here is a bright side, if the stress was a random sample, then you would expect only 5% of sample to be significant, or about 2.5% of the total possible kmers (since ~ 9k kmers in each treatment), check to make sure when made sig files that it has all kmers in the treatment files, well really what about the NAs I have in my sig files, where did those come from?
	
	next step is add cut to above script to get only the kmer
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51469932[].mgr-04.i

fixed that script to extract kmer substring, will be in all lowercase letters.. see if I can change that.. also should be able to deal with non-exact matches in the kmer. currerntly blast run made 100% match but later if I want non exact (i just have it taking the hyphens out)

51470917[].mgr-04.i

looks like its excluding some lines, debugging

51471466[].mgr-04.i
51472056[].mgr-04.i

awk -F " " '{print $3}' at_cold_down_comp_dump_7_sig_over_blast_7mer.txt | cat > temp.txt

use awk instead of cut

51472092[].mgr-04.i
51474061[].mgr-04.i


made put_7mers.pl now need to integrate that into bash shell for ext kmers from blast for a one step process

 at_cold_down_comp_dump_7_sig_over.blast
 at_cold_down_comp_dump_7_sig_over.fa

qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51488148[].mgr-04.i
51488158[].mgr-04.i
51490336[].mgr-04.i
51490514[].mgr-04.i
51491097[].mgr-04.i
51492287[].mgr-04.i

currently searching for DHS dataset under stress conditions... not finding it, you hate to see that
There are DHS data sets for development, dark treated, heat shocked as of 2015, haven't found any more recent than that

There is a paper that called motifs based on DHS sites and found ~70% of those in microarray data, check how they found that because there are definitely stress microarray data floating around "motif models derived from protein binding microarrays" ahhh that was the specific wording, check what thats all about.

http://cisbp.ccbr.utoronto.ca/ eukaryotic dna binding domain motif identification

After that, look for yeast 2 hybrids

***********************
for the high-throughput yeast 1H systems, prey plasmids will be easy since ~2k TFs in athal, so only 2k preys, but need to bait whole genome, do they just randomly insert and screen? actually sounds right, but how long of a bait sequence do you need to accurately map it back to the genome, actually, shouldn't 150 / 200 bp be enough?
**************************
- Michelle Tang

The sig files did not contain every significant kmer. Additionally, I have been ignoring NAs in the significance files which truely mean they are not represented in the treatment genes. These need to be considered zeros, so need to replace NA with zeros... something I could have done in R so if I run this process again separately I will need to change that since now I am jus going to write it into the perl scripts. Write my pipeline before I do any of this: actually, would be best to just replace NAs with zero, shouldn't be too difficult, yea also,,, yea just recreate the sig files again

- looked at it again, I am missing a kmer in my permutations file (16383 / 16384)
- Also, at least 1 permutation does not represent a kmer in ALL except 430 kmers. Therefore, when treatment count is zero, ecdf can = 0.5 if half of all permutations do not have that kmer..... maybe I need to step up the number of permutations... was taking 2k CNSs a good proxy? How can I get a summary table of the number of bp extracted from stress responsive / nonresponsive genes?

- checked, depending on the stress, have about 200, 400, or 700 CNSs for each treatment, took 1000 for permutations, shouldn't matter should it? decreases my confidence in meja kmers since they are smaller sample size (but then shouldn't we get more significant kmers? Ah well
~26k nt in at_cold_down_comp_cns.fa
~40k nt in perm files

-Im tempted to look for any zeros with significant ecdf and print that line to see what the permutation distribution is. shouldn't be too many lines to sift through.. sure why not??
- yea for some we are getting significance at 0 kmer counts since they are also not showing up in permutations. that I believe is because the CNSs are depleted for these kmers. Intuitively though, I should exclude these kmers. Whats a good rule? If kmer is not represented in >= 90% of permutations, exclude from further analysis? Do these kmers overlap?
3:

4:

5:


keep for now, ask later

**********scat plot between up and nonup with NA stuff**********************

	- create directory in kmer_en on hpcc backing up everything incase something goes wrong
	- R code to create _sig.txt file with five columns: kmer	treat_count	perm_min	perm_max	ecdf (sig)
	- upload to 04_Edger/kmer_en/blast_run/sig_7
	- dos2unix everything
	- create _over and _under files:
		- had previously cut out the lines with NA with cut_sig.sh using unix
		- Then had parsed it with sig_to_fa.sh / sig_to_fa.pl
			- This time, skip the cut part, edit the perl script, just take out the NA search since all NA should be zeros
	- Then blast it
		- need to think about making those up to non-up comparisons, see if they end up being the same
	- Parse blast with ext_kmer_from_blast.sh which uses put_7mers.txt
		- not sure if any information with be gained from the under rep ones but good to have anyway.
Plan:
$[yoccaala:sig_7] dos2unix *

$[blast_run] qsub -t 1-24 -v INFILE=sig_file_list.txt sig_to_fa.sh

$[blast_run] qsub -t 1-48 -v INFILE=fa_file_list.txt blast_sig_treat_to_motif.sh

$[blast_run] qsub -t 1-48 -v INFILE=blast_file_list.txt ext_kmer_from_blast.sh



[yoccaala@dev-intel14 blast_run]$ qsub -t 1-24 -v INFILE=file_lists/sig_file_list.txt sig_to_fa.sh
51519039[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-24 -v INFILE=file_lists/cut_file_list.txt sig_to_fa.sh
51519169[].mgr-04.i
51519205[].mgr-04.i

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/fa_file_list_over_under.txt blast_sig_treat_to_motif.sh
51519308[].mgr-04.i

[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51519887[].mgr-04.i

can also get unique putative 7mers by taking out those that are also enriched in paralogs
Next step:
	- run uniq motifs
	- run uniq motif script to get unique putative 7mers

[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_up.txt uniq_put_7mer_up.sh
51520144[].mgr-04.i
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_down.txt uniq_put_7mer_down.sh
51520161[].mgr-04.i

[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_up.txt uniq_motif_up.sh
51520194[].mgr-04.i
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_down.txt uniq_motif_down.sh
51520196[].mgr-04.i

had moved the blast db to another directory after running the last time so restart from that point:
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/fa_file_list_over_under.txt blast_sig_treat_to_motif.sh
51520741[].mgr-04.i

for some reason the sequence CCCCCCC and TTTTTTT is throwing out a warning, invalid query sequence??? Idk, shouldn't matter

[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_up.txt uniq_put_7mer_up.sh
51522140[].mgr-04.i
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_down.txt uniq_put_7mer_down.sh
51522156[].mgr-04.i
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_up.txt uniq_motif_up.sh
51522157[].mgr-04.i
[yoccaala@dev-intel16-k80 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_down.txt uniq_motif_down.sh
51522158[].mgr-04.i


ooopsie, these should hhave been before the uniq commands:
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_mot_from_blast.sh
51523041[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFIL=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51523052[].mgr-04.i

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_up.txt uniq_motif_up.sh
51523562[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/motif_file_list_down.txt uniq_motif_down.sh
51523568[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_up.txt uniq_put_7mer_up.sh
51523569[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_down.txt uniq_put_7mer_down.sh
51523570[].mgr-04.i


ugh

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFILE=file_lists/blast_file_list.txt ext_kmer_from_blast.sh
51523588[].mgr-04.i
51523596[].mgr-04.i
51523611[].mgr-04.i

We are getting over 1k significantly overrep kmers. We expect 820 if its random. We only get about 100 blast hits to the db. Comparing between up / nonup will help narrow down I believe, we shall see

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_up.txt uniq_put_7mer_up.sh
51523844[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists/put_7mer_file_list_down.txt uniq_put_7mer_down.sh
51523845[].mgr-04.i


Whats the expected kmer overlap between up and nonup if it was completely random? 1st sample ~ 1,500 / ~16,000. Two samples should overlap on average by that amount, right? That sounds right. Therefore,, I hope we get significantly different from that expectation

**********after incorporating the NAs as 0s, nearly doubles those significantly enriched. This tells me a significant number of genes having significant ecdf with 0 counts. NEED TO FIX THIS!!!!!!!!!!! but how? in perl script when creating fa files sounds like the best place to do it

That number doubled, but only 38 were from zeros

Ahhh, was trying to wrap my head around why such a big increase, and it was because in the first pass, I was only going through about half the rows of the whole dataframe, now I am confident we have them all. Damn its messy, need way to increase confidence in putative kmers.... maybe the scatter plots will show some cool ones

1-24-18

Lets do some scatterplots, just go from scratch here. What do we want to compare? Find a kmer that is highly represented in up that is not represented in nonup?????????????

what are the significance values of my kmers with blast hits?? That probably doesn't matter

What does the histogram of significance values look like zoomed in on the over rep ones? Can't think of a super high throughput way to do it locally so for now look within up/down and within nonup/nondown

I zoomed in on the histograms of sig values. They don't seem to really peak until after 0.99, so lets pull those out and blast them and compare some results. I will have higher confidence in both the putative 7mers and motif hits

create new directories:
	- sig_fa_7/99/ 
	- blast_output/99/ 
	- sig_7/99/kmer_blast_hit 
	- sig_7/99/put_7mer/
	- motifs/99/
	- motifs/99/uniq
	- sig_7/99/put_7mer/uniq

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-24 -v INFILE=file_lists_99/sig_file_list.txt scripts_99/sig_to_fa_99.sh
51538661[].mgr-04.i
51538746[].mgr-04.i
51538917[].mgr-04.i

The alpha dup file, sig_7/at_cold_nonup_comp_dump_5_sig.fa, does not exist.

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-24 -v INFILE=file_lists_99/file_list_7.txt scripts_99/sig_to_fa_99.sh
51539095[].mgr-04.i

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFILE=file_lists_99/fa_file_list_99.txt scripts_99/blast_sig_treat_to_motif_99.sh
51539377[].mgr-04.i

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFILE=file_lists_99/blast_file_list_99.txt scripts_99/ext_kmer_from_blast_99.sh
51539645[].mgr-04.i

[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-48 -v INFILE=file_lists_99/blast_file_list_99.txt scripts_99/ext_mot_from_blast_99.sh
51539702[].mgr-04.i


[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_up_99.txt scripts_99/uniq_motif_up_99.sh
51539941[].mgr-04.i
51539946[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_down_99.txt scripts_99/uniq_motif_down_99.sh
51539943[].mgr-04.i
51539947[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_up_99.txt scripts_99/uniq_put_7mer_up_99.sh
51539944[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_down_99.txt scripts_99/uniq_put_7mer_down_99.sh
51539945[].mgr-04.i


Need to think of a nice way to present the information / should download the summary tables so they can all be open at the same time for sure. Do that first, get histograms ready first. Need to think about scatter plots stuff. Is there anything that I should read like right now? I read about 3 papers per week just dallying around. class not really that stressfull (except maybe tonight) so I have time for all this stuff.



Summary tables did not have all 24 files in them. I think it was a problem with the multithreading not able to open and write simultaneously. Think can sove it by having perl script save to uniq temp file and use cat to append to bigger file

How to align them easily?? What do I want final product to look like?

0.95	0.99
#change	#change
#non	#non

I think the best way will be to make a tab separated file where you get file name with base info: stress,edgeR,comp/inf,over/under,motif/put7mer,99/95

These are going to be some very specific loops might not be very useful later. Meeting is soon so just manually curate a few for comparison then create final table later. good to ask now though: what do we want the table to tell us? How much info changed moving from 0.95 to 0.99, how many putative 7mers / blast motif hits do we have



Hardly any motif # change!!!! (this comment coming much later. there is still little change, but i was excited about getting exact #s, however i did not change underrep threshold so all underrep were showing same exact #s) So our kmers that blasted to motifs were almost exclusively in this >0.99 bin which is great!!!!
Seems like very large amount of putative 7mers still..... that will be tough to tease out. Lets see how many 7mers we were blasting in the >0.99 set

- Y1H data to see if put 7mers have protein binding evidence

copy number of kmer called (redo scatter plots to be sure and so you have them)

- Type up overview to stare at
- expect clustering. superimpose on gene coexp network
- rank confidence in shift between them. look for most extreme differences. think about how they compare the permutations. ~ 10 CNSs to look at manually. grab from skew could randomly pick 10


fix summary tables:
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_up_99.txt scripts_99/uniq_motif_up_99.sh
51544877[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_down_99.txt scripts_99/uniq_motif_down_99.sh
51544878[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_up_99.txt scripts_99/uniq_put_7mer_up_99.sh
51544879[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_down_99.txt scripts_99/uniq_put_7mer_down_99.sh
51544880[].mgr-04.i

that didn't work, new idea, only give it a single processor  / thread

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_up_99.txt scripts_99/uniq_motif_up_99.sh
51545194[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_down_99.txt scripts_99/uniq_motif_down_99.sh
51545195[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_up_99.txt scripts_99/uniq_put_7mer_up_99.sh
51545196[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_down_99.txt scripts_99/uniq_put_7mer_down_99.sh
51545197[].mgr-04.i

:( should also run up / down separately ie make sure one finished first

[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_up_99.txt scripts_99/uniq_motif_up_99.sh
51546472[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_up_99.txt scripts_99/uniq_put_7mer_up_99.sh
51546504[].mgr-04.i

wait a little

WHAT IS GOING ON!? try changing opening method

Chad strong candidate: emily josephs: Ning Jiang: Jiming Jiang: Kevin Leui (comp sci maybe) Some strong stat component: Shinhan: Jeff connor or gidean: marjorie Weber

- Get deadline for committee formation

- cns in tandem much closer than further ones


[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/motif_file_list_down_99.txt scripts_99/uniq_motif_down_99.sh
51568715[].mgr-04.i
[yoccaala@dev-intel14-k20 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_down_99.txt scripts_99/uniq_put_7mer_down_99.sh
51568730[].mgr-04.i


[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_up_99.txt scripts_99/uniq_put_7mer_up_99.sh
51569985[].mgr-04.i
[yoccaala@dev-intel14 blast_run]$ qsub -t 1-12 -v INFILE=file_lists_99/put_7mer_file_list_down_99.txt scripts_99/uniq_put_7mer_down_99.sh
51569988[].mgr-04.i

